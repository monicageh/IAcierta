{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { GameService } from '../services/game.service';\nimport { QuestionService } from '../services/question.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/game.service\";\nimport * as i3 from \"../services/question.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = [\"roscoRef\"];\nfunction GameComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const letter_r5 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"width\", letter_r5.size, \"px\")(\"height\", letter_r5.size, \"px\")(\"left\", letter_r5.x, \"px\")(\"top\", letter_r5.y, \"px\")(\"font-size\", letter_r5.size * 0.5, \"px\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", letter_r5.value, \" \");\n  }\n}\nfunction GameComponent_ng_container_7_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function GameComponent_ng_container_7_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.checkAnswer());\n    });\n    i0.ɵɵtext(1, \" Comprobar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameComponent_ng_container_7_div_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\u2714\\uFE0F \\u00A1Correcto!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameComponent_ng_container_7_div_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" \\u274C Incorrecto. La respuesta es: \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r11.feedback == null ? null : ctx_r11.feedback.correctAnswer);\n  }\n}\nfunction GameComponent_ng_container_7_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, GameComponent_ng_container_7_div_5_span_1_Template, 2, 0, \"span\", 15);\n    i0.ɵɵtemplate(2, GameComponent_ng_container_7_div_5_span_2_Template, 4, 1, \"span\", 15);\n    i0.ɵɵelementStart(3, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function GameComponent_ng_container_7_div_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.nextQuestion());\n    });\n    i0.ɵɵtext(4, \" Siguiente pregunta \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"correct\", ctx_r7.isCorrect)(\"incorrect\", !ctx_r7.isCorrect);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.isCorrect);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.isCorrect);\n  }\n}\nfunction GameComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function GameComponent_ng_container_7_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.userAnswer = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, GameComponent_ng_container_7_button_4_Template, 2, 0, \"button\", 11);\n    i0.ɵɵtemplate(5, GameComponent_ng_container_7_div_5_Template, 5, 6, \"div\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.question.pregunta);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.userAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.showFeedback);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showFeedback);\n  }\n}\nfunction GameComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Cargando preguntas\\u2026\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let GameComponent = /*#__PURE__*/(() => {\n  class GameComponent {\n    constructor(router, gameService, questionService) {\n      this.router = router;\n      this.gameService = gameService;\n      this.questionService = questionService;\n      // flujo de preguntas\n      this.questions = [];\n      this.currentIndex = 0;\n      this.question = null;\n      // rosco\n      this.letters = [];\n      // respuesta / feedback\n      this.userAnswer = '';\n      this.showFeedback = false;\n      this.isCorrect = false;\n      // idioma\n      this.lang = 'es';\n    }\n    ngOnInit() {\n      // 1) recupera idioma seleccionado\n      this.lang = this.gameService.getSelectedLang();\n      if (!this.lang) {\n        this.router.navigate(['/']);\n        return;\n      }\n      // 2) carga 25 preguntas aleatorias\n      this.questionService.startGame(this.lang).subscribe(list => {\n        this.questions = list;\n        this.currentIndex = 0;\n        this.loadCurrentQuestion();\n      });\n    }\n    ngAfterViewInit() {\n      this.generateRoscoLetters();\n    }\n    onResize() {\n      this.generateRoscoLetters();\n    }\n    loadCurrentQuestion() {\n      this.question = this.questions[this.currentIndex];\n      this.userAnswer = '';\n      this.showFeedback = false;\n    }\n    checkAnswer() {\n      if (!this.question) return;\n      this.questionService.checkAnswer(this.question.id, this.lang, this.userAnswer).subscribe(res => {\n        this.feedback = res;\n        this.isCorrect = res.correct;\n        this.showFeedback = true;\n      });\n    }\n    nextQuestion() {\n      this.currentIndex++;\n      if (this.currentIndex < this.questions.length) {\n        this.loadCurrentQuestion();\n      } else {\n        // fin de la partida, volvemos al inicio\n        this.exitGame();\n      }\n    }\n    exitGame() {\n      this.gameService.clear();\n      this.router.navigate(['/']);\n    }\n    generateRoscoLetters() {\n      const rect = this.roscoRef.nativeElement.getBoundingClientRect();\n      const outer = Math.min(rect.width, rect.height);\n      const center = outer / 2;\n      const circleSize = outer * 0.1;\n      const radius = center - circleSize / 2;\n      const total = this.questions.length || 25;\n      this.letters = [];\n      for (let i = 0; i < total; i++) {\n        const angle = 360 / total * i - 90;\n        const rad = angle * Math.PI / 180;\n        const x = center + radius * Math.cos(rad) - circleSize / 2;\n        const y = center + radius * Math.sin(rad) - circleSize / 2;\n        this.letters.push({\n          value: (i + 1).toString(),\n          x,\n          y,\n          size: circleSize\n        });\n      }\n    }\n  }\n  GameComponent.ɵfac = function GameComponent_Factory(t) {\n    return new (t || GameComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.GameService), i0.ɵɵdirectiveInject(i3.QuestionService));\n  };\n  GameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GameComponent,\n    selectors: [[\"app-game\"]],\n    viewQuery: function GameComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.roscoRef = _t.first);\n      }\n    },\n    hostBindings: function GameComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function GameComponent_resize_HostBindingHandler() {\n          return ctx.onResize();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"game-wrapper\"], [1, \"rosco\"], [\"roscoRef\", \"\"], [1, \"exit-button\", 3, \"click\"], [\"class\", \"letter\", 3, \"width\", \"height\", \"left\", \"top\", \"fontSize\", 4, \"ngFor\", \"ngForOf\"], [1, \"inner-panel\"], [4, \"ngIf\", \"ngIfElse\"], [\"loading\", \"\"], [1, \"letter\"], [1, \"question-text\"], [\"type\", \"text\", \"placeholder\", \"Tu respuesta\\u2026\", 1, \"answer-input\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"check-button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"feedback\", 3, \"correct\", \"incorrect\", 4, \"ngIf\"], [1, \"check-button\", 3, \"click\"], [1, \"feedback\"], [4, \"ngIf\"], [1, \"next-button\", 3, \"click\"]],\n    template: function GameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1, 2)(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function GameComponent_Template_button_click_3_listener() {\n          return ctx.exitGame();\n        });\n        i0.ɵɵtext(4, \"Salir\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, GameComponent_div_5_Template, 2, 11, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtemplate(7, GameComponent_ng_container_7_Template, 6, 4, \"ng-container\", 6);\n        i0.ɵɵtemplate(8, GameComponent_ng_template_8_Template, 2, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(9);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.letters);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.question)(\"ngIfElse\", _r3);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n    styles: [\".game-wrapper[_ngcontent-%COMP%]{position:relative;display:flex;justify-content:center;align-items:center;height:100vh;width:100vw;box-sizing:border-box;margin:0;padding:0}.exit-button[_ngcontent-%COMP%]{position:absolute;top:1rem;right:1rem;z-index:1000;padding:.5rem 1rem;font-size:1rem;background:#e53935;color:#fff;border:none;border-radius:4px;cursor:pointer}.rosco[_ngcontent-%COMP%]{position:relative;width:90vmin;height:90vmin;max-width:100%;max-height:100%}.letter[_ngcontent-%COMP%]{position:absolute;border:2px solid #333;border-radius:50%;background:#fff;display:flex;justify-content:center;align-items:center;font-weight:700}.inner-panel[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:45%;max-width:360px;background:rgba(255,255,255,.95);padding:1rem;border-radius:8px;display:flex;flex-direction:column;gap:1rem;text-align:center}.question-text[_ngcontent-%COMP%]{font-size:1.2rem;line-height:1.4;word-wrap:break-word}.answer-input[_ngcontent-%COMP%]{padding:.5rem;font-size:1rem;border:2px solid #ccc;border-radius:4px}.check-button[_ngcontent-%COMP%], .next-button[_ngcontent-%COMP%]{padding:.6rem;font-size:1rem;border:none;border-radius:4px;cursor:pointer}.check-button[_ngcontent-%COMP%]{background:#1976d2;color:#fff}.next-button[_ngcontent-%COMP%]{background:#388e3c;color:#fff}.feedback[_ngcontent-%COMP%]{padding:.75rem;border-radius:6px}.feedback.correct[_ngcontent-%COMP%]{background-color:#a5d6a7;color:#000}.feedback.incorrect[_ngcontent-%COMP%]{background-color:#ef9a9a;color:#000}.inner-panel[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:0}\"]\n  });\n  return GameComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}